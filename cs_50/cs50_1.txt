------------------------------------------ 2진법
컴퓨터 과학이란?
  문제를 해결에 대한 학문
  input을 전달받아 output을 만들어내는 과정
  그 과정 중에 있는 것이 컴퓨터 과학.

2진법을 표현하는 단위는 bit(Binary digit)
1 byte = 8 bit

트랜지스터는 물리적으로 정보를 표현하고 값을 저장한다.

------------------------------------------ 문자의 표현
문자를 숫자로 표현 할 수 있도록 정해진 약속(표준)
ASCII(아스키코드), 더 많은 비트를 사용해 더 많은 문자를 표현 가능한 Unicode

이렇게 표준을 정함으로써 숫자와 문자 뿐만 아니라,
색 또한 나타낼 수 있고, 이를 통해 이미지, 동영상까지 표현 가능하다.
음악 또한 역시 가능하다.

------------------------------------------ 알고리즘
알고리즘이란
  입력값을 출력값의 형태로 바꾸기 위해 어떤 명령들이 수행되어야 하는지에 대한 규칙들의 순서적 나열
  정확한건 물론이고 효율적이여야한다.

알고리즘을 표현하는 의사코드(pseudo-code)
  의사코드에서도 코드의 중요한 문법은 나온다.
  명령을 뜻하는 함수, 조건, 조건을 결정하는 boolean, 루프, 변수

------------------------------------------------------------------------------------ C
------------------------------------------ Terminal 명령어
clang 파일명
  해당 파일 컴파일
clang -o hello 파일명
  해당 파일 hello라는 이름의 파일로 컴파일.
ls (list)
  현 디렉토리 내 파일 리스트
rm 파일명 (remove)
  해당 파일 삭제
mkdir (make directory)
  디렉토리 만들기
rmdir (remove directory)
  디렉토리 없애기
make 파일명
  clang에 필요한 라이브러리를 일일히 붙여서 실행하지 않도록하는 편한 방법
cd 디렉토리명(change directory)


------------------------------------------ C 명령어
시작은
  int main(void)
  {

  }
출력은
  printf('문자열')
엔터키
 \n
마침표는 ;
파일명은
  파일명.c (확장자를 붙여줘야 한다.)

소스코드 작성 후 컴파일을 통해 머신코드로 바꾼다.


#include <cs50.h>              //cs50.h 라이브러리 받아오기
#include <stdio.h>

int main(void)
{
    string answer = get_string("what's your name?\n");  //placeholder로 string이라고 명시해주고, get_string 함수로 사용자에게 특정 값을 받아온다.
    printf("hello, %s\n", answer);                      //변수로 저장된 answer 값을 %s의 위치에 출력.
}

조건문
  if(), else if(), else

반복문
  while(true)                    
  for(int i = 0; i<50; i = i++)
  do ~ while ~ 
    while과 다른 점은 처음 실행될 때는 조건을 확인하지 않는다.

변수의 데이터 타입
  bool: 불리언 표현, (예) True, False, 1, 0, yes, no
  char: 문자 하나 (예) 'a', 'Z', '?'
  string: 문자열
  int: 특정 크기 또는 특정 비트까지의 정수 (예) 5, 28, -3, 0 (대략 40억까지 셀 수 있다.)
  long: 더 큰 크기의 정수
  float: 부동소수점을 갖는 실수 (예) 3.14, 0.0, -28.56
  double: 부동소수점을 포함한 더 큰 실수

비교연산자
  or = ||
  and = &&

함수 선언
  void cough(data type or void)
  {
    printf("cough\n")
  }

  리턴 값의 타입   함수 이름( 파라미터 데이터 타입)
  {
    로직.
  }

------------------------------------------ 하드웨어의 한계
램이 할 수 있는 일에는 언제나 한계가 있다.
즉,
컴퓨터가 할 수 있는 일은 근본적인 한계가 있다.

정수 오버플로우

부동소수점 부정확성

------------------------------------------------------------------------------------ 3. 배열
------------------------------------------ 컴파일링
make, clang으로 프로그램을 실행할 4 개의 단계.

전처리
컴파일링
어셈블링
링킹

전처리
  #include 와 같은 코드가 있다면,
  해당 파일의 내용을 담은 새로운 코드를
  C코드 형태로 생성한다.

컴파일링
  전처리과정이 끝난 C코드를 저수준 언어인 어셈블리 코드로 변환

* 어셈블리 코드란?
  어셈블리는 C보다 연산의 종류가 훨씬 적지만,
  여러 연산들이 함께 사용되면 C에서 할 수 있는 모든 것들을 수행할 수 있다.
  C 코드를 어셈블리 코드로 변환시킴으로써 컴퓨터가 이해할 수 있는 언어와 최대한 가까운 프로그램으로 만든다.
  컴파일이라는 용어는
  소스 코드에서 오브젝트 코드로 변환하는 전체 과정을 통틀어 일컫기도 하지만,
  구체적으로 전처리한 소스 코드를 어셈블리 코드로 변환시키는 단계를 말하기도 합니다.

어셈블
  어셈블리 코드를 오브젝트 코드로 변환
  CPU가 어떤 명령을 수행해야 하는지 연속된 0과 1로 만든다.
  컴파일링 하는 코드가 하나라면 여기서 끝.
  아니라면 다음 과정으로.

링크
  컴파일링이 완료된 오브젝트 코드들을 합친다.

------------------------------------------ 디버깅, 코드의 디자인
2가지 종류의 에러

1. 문법적 에러
  프로그램이 터진다.
  오류를 잡아내는 프로그램의 도움을 받아 해결 가능.

2. 논리적 에러
  프로그램이 터지지 않지만,
  결과 값이 원하는 값과 다르다면 논리적 에러.

  해결방법 2가지
  - printf 명령어를 통해 사용자가 확인하는 방법.
  - 디버깅 프로그램을 이용해서 breakpoint를 설정하고 단계별로 확인하는 방법.

* CS50 강의를 위한 프로그램들
  help 50 (문법적 에러 해결)
  debug50 (논리적 에러 해결)
  check50 (문제점과 해결책을 알려주는 프로그램)
  style50 (가독성을 위한 코드 디자인)


------------------------------------------ 배열
bool: 불리언, 1바이트
char: 문자, 1바이트
int: 정수, 4바이트
float: 실수, 4바이트
long: (더 큰) 정수, 8바이트
double: (더 큰) 실수, 8바이트
string: 문자열, ?바이트

int scores[3];
 => int 타입의 변수를 받는 scores라는 이름의 배열에는 3개의 공간이 있다.

전역변수
  만약 N이 고정된 값(상수)이라면 그 값을 선언할 때
  함수 밖에서 const를 앞에 붙여서 전역 변수로 지정.
  전역 변수의 이름은 대문자

형변환
  (바꾸고 싶은 데이터 타입) 변수명
  ex)
    int sum = 0;
    (float) sum  //int인 sum을 float로 변환


------------------------------------------ 문자열과 배열
문자열(string)은 문자(char)의 배열

1개의 char 당 1바이트를 사용하니,
문자열에 할당되는 메모리는 char의 갯수 x 1 바이트이다.
당연히 문자열은 배열이니까,
인덱싱으로 접근 가능하다.

문자열 배열에서는 문자 데이터 이외에,
배열의 끝을 나타내는 종단문자가 존재한다.
실제로,
string name = "EMMA"에서
name[4]를 int로 형변환 후 printf로 조회해본다면, 0이 출력되는 것을 확인할 수 있다.


------------------------------------------ 문자열의 활용
배열의 길이를 알고 싶을 때,
  strlen()매서드를 사용하면 된다.
  strelen을 사용하기 위해선 <string.h>라이브러리를 #include 해야한다.

문자열에서 소문자를 대문자로 변환하고 싶을 때,
  toupper()매서드를 사용하면 된다.
  toupper을 사용하기 위해선 <ctype.h>라이브러리를 #include 해야한다.


------------------------------------------ 명령행 인자

메인 함수가 아래와 같을 때,
int main(int argc, string argv[])
{
}

argc는 argument count 라는 뜻.
string argv[] 는 문자열로 이루어진 배열이라는 뜻.

  argv[0]는 기본적으로 프로그램의 이름
  argv[1]은 프로그램명 이후의 옵션