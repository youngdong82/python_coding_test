ref: https://davinci-ai.tistory.com/37

Computational Thinking 기초 개념

자료구조.
1. 비트연산

  비트와 바이트
    2진법을 사용하는 컴퓨터.
    비트는 0과 1을 표현하는 가장 작은 단위 (2가지 수 표현)
    Byte는 8비트 (2^8 = 256가지 수 표현)
    1~ 256도 가능하고, -128 ~ 127도 가능하다.
    일반적으로 정수 하나에 4Byte를 사용한다. (2^32 = 약 42억 수 표현)
  
  음수 표현법
    1. 0은 1로, 1을 0으로 전부 바꾼다.
    2. 바꾼 비트에 1을 더한다.
  

2. 스택
  특징
    push와 pop
    후입선출(Last in First Out)
  
  기본적인 예시
    인터넷 브라우저
      페이지가 스택에 들어가는 요소라 생각.
      뒤로가기 기능을 구현하기 위해 2개의 스택 필요.
      prev 스택, next 스택

      1. 새로운 페이지 접속 시, prev 스택에 기존의 페이지 push, next 스택은 비우기.
      2. 뒤로 가기 시, 현재의 페이지는 next 스택에 push, prev[-1]을 pop
      3. 앞으로 가기 시, 현재 페이지를 prev 스택에 push, next[-1]을 pop


3. 큐
  특징
    push와 pop
    선입선출(First In First Out)
  
  기본적인 예시
    원형 테이블
      n명의 사람이 원형 테이블로 앉아있을 때, 1번 사람부터 원에서 나가고, 나간사람으로부터 k번째 사람이 차례대로 나가는 문제
      n이 8, k가 3일 때, 순서는 1-4-7-3-8-6-2-5
      k만큼씩 뽑아서 마지막을 기록하고 남은 나머지는 다시 뒤로 넣는 방법 반복!

4. 그래프
  특징
    정보 사이에 관계가 있는 자료구조
    방향의 유무에 따라 두가지 방향, 무방향 그래프
    Cycle: 같은 간선을 2번 이상 지나지 않고 돌아올 수 있을 때 사용.

  기본적인 예시
    구슬크기
      무게가 다른 n개의 구슬이 있을 때, k번의 구슬 두개씩의 크기 대소 비교 측정 결과가 주어집니다.
      이때, 자신이 몇번 째로 무거운 구슬인지를 아는 구슬의 수를 구하는 문제입니다.
      그래프로 각 번호의 구슬을 연결시켜서 해결할 수 있습니다.
      부모 자식 노드 관계.

5. 트리
  특징
    그래프의 종류.
    사이클이 존재하지 않는다.
    노드 수가 n일 때, 간선의 수는 n-1개.
  
  기본적인 예시
    이진트리 순회
      순회란?
        트리를 돌면서 출력한다는 뜻.
        기본적으로 왼쪽부터 순회
        출력의 시기에 따른 3가지 종류의 순회

      전위 순회
        1. Root부터 시작해서 출력
        2. 방문 후, 왼쪽 노드가 존재하면 해당 노드로 이동 후 출력.
        3. 왼쪽 자식 노드가 없거나, 이미 출력했다면, 오른쪽으로 이동 후 출력.

      중위 순회
        1. Root부터 시작.
        2. 왼쪽 노드가 존재하면 해당 노드로 이동
        3. 왼쪽 노드가 존재하지 않다면 자신을 출력, 오른쪽 노드 확인
        4. 오른쪽 노드 없다면 부모로 이동

      후위 순회
        1. Root부터 시작.
        2. 왼쪽 노드가 존재하면 해당 노드로 이동
        3. 왼쪽 노드 없다면 오른쪽 노드 확인.
        4. 오른쪽 노드 있다면 이동, 없으면 자신을 출력하고 부모 노드로 돌아간다.

    트리 복구
      서로 다른 순회 결과를 주고 나머지 순회 결과를 묻거나 그리는 문제 가능.
        1. 전위 순회 결과에 얻는 단서.
          가장 처음이 Root.
        2. 후위 순회 결과에 얻는 단서.
          가장 마지막이 Root
        3. 중위 순회 결과에 얻는 단서.
          Root를 안다면, 그래프의 전체적인 왼쪽과 오른쪽을 구분할 수 있다.
      3가지 순회 결과 중, 2개의 순회 결과를 안다면, 나머지 하나의 순회결과나 그래프를 그릴 수 있다.
