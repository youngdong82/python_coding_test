------------------------------------------------------------------------- 1. 컴포넌트 구조 생각해보기
URL 라우팅이 관건이다.

App
1. ProductListPage
  상품들이 열거된 페이지
2. ProductDetailPage
  각 제품 별 상세 페이지
3. CartPage
  사용자가 선택한 제품이 표시되는 컴포넌트.

URL 라우팅의 책임을 App 컴포넌트가 지게하고,
해당 책임에 따른 동작에 맞는 페이지 렌더링하기.
각각의 페이지는 서로 의존성을 띄지 않은 형태로 작성.

------------------------------------------------------------------------- 2. App, Page 컴포넌트 구현
--------------------------------------- 2-1. App 컴포넌트 구현
this.route() 정의해주고 호출.
this.route는
URL 뽑아와서 특정 URL과 같다면 ProductListPage를 선언, 렌더링 한다.

--------------------------------------- 2-2. index.js 컴포넌트 구현
쿼리 셀렉터로 index.html의 main 태그 잡아서 target으로 넣어주기

--------------------------------------- 2-3. index.html 컴포넌트 구현
index.js module 타입으로 script로 선언.
className을 App으로 삼은 main 태그 만들기.

--------------------------------------- 2-4. ProductListPage 컴포넌트 구현
1. target을 인자로 받고
2. 각 컴포넌트의 이름을 className으로 가진 div element 만들기.
  innerHTML에 각 내용 넣기.

3. this.render 선언해주기.
  target에다가 만들어놓은 div element appendChild 만들기

--------------------------------------- 2-5. ProductDetailPage 컴포넌트 구현
1. target, productId을 인자로 받고
2. 각 컴포넌트의 이름을 className으로 가진 div element 만들기.
  innerHTML에는 각 내용 넣기.

3. productId를 state로 설정하기.

4. this.render 선언해주기.
  target에다가 만들어놓은 div element appendChild 만들기





--------------------------------------- localhost 사용을 위한 아파치??
ref: https://88240.tistory.com/476
