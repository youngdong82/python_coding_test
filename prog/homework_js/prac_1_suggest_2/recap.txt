------------------------------------------------------------------------- 1. 컴포넌트 구조 생각해보기
전체 App
1. SearchInput
  사용자의 input 값을 받는 컴포넌트
2. Suggestion
  SearchInput에서 값이 하나씩 추가될 때마다, DB에서 매치되는 값을 받아와 열거하는 컴포넌트
3. SelectedLanguages
  사용자가 선택한 언어가 표시되는 컴포넌트.

각각의 컴포넌트는 서로 의존성을 띄지 않은 형태로 작성해야한.

------------------------------------------------------------------------- 2. 코드 작성하기
--------------------------------------- 2-1. App 컴포넌트 작성.
Vanila JS지만 Stateful React와 매우 닮았다는 느낌을 받는다.

가장 큰 컴포넌트인 App에서 기본적으로 필요한 값인 
fetchedLanguages:[]와 selectedLanguages: [] 가 담겨있는 state.
state를 변경하는 setState 함수를 초기화한다.

App.js를 생성하는 index.js를 선언하고,
index.html에서 index.js 컴포넌트를 불러온다.

--------------------------------------- 2-2. SearchInput 컴포넌트 작성.
target과 initialState를 인자로 받는 SearchInput

- 초기화
1. document.createElement('form')으로 elemet를 생성하고
2. className 붙여주고.
3. 받아온 initialState를 state에 넣어주는걸로 초기화한다.

만든 element를 target의 자식 노드로 붙인다.

render 함수 만들고, 호출

App.js에서 import 하고 호출하기.

--------------------------------------- 2-3. API 연동하기
api.js 생성

fetch 함수로 request 보내는 함수 생성.
res가 잘 온다면, json으로 바꿔서 리턴.
안온다면, 에러로 리턴.

비동기적으로 작동하는 fetchLanguage 함수를 초기화 시킨후 export 한다.

SearchInput 컴포넌트에
onChange 파라미터 추가하고 이벤트 리스너 붙여주기.

App.js에서
api.js에서 export한 fetchLanguage import하고,
SearchInput 선언한 곳에 onChange 파라미터로 fetchLanguage 넣어주기

(서버가 없기 때문에 작동은 안돼지만,
사용자의 값이 갱신될 때마다 확실하게 서버에 요청은 보내고 있다.)

--------------------------------------- 2-4. Suggestion 구현하기
target과 initialState를 인자로 받는 Suggestion 컴포넌트

- 초기화
1. document.createElement('div')으로 elemet를 생성하고
2. className 붙여주고.
  만든 element를 target의 자식 노드로 붙인다.
3. 받아온 initialState를 state에 넣어주는걸로 초기화한다.
4. setState도 만들어준다.
  nextState가 생기면 state는 nextState로 바꿔주고,
  렌더링.
5. 렌더링 함수 정의해주기.
  현재 state에서 items 배열 받아오기
  만약 items 길이가 0보다 길면,
    element 스타일을 display = block으로 설정하고,
    innerHTML 설정하기.
      ul 태그 안에 items 돌면서 li element 만들기.
  0 이면,
    element 스타일을 display = none으로 설정하고,
    innerHTML 비워주기.

6. 렌더링.

App.js에서 suggestion 호출
  target과 initialState를 인자로 초기화.

App 에서 setState 할 때,
  suggestion의 setState 넣어주기.
  = items에 현 stated의 fetchedLanguages를 넣어주기

searchInput의 onChange 함수의 인자가
  0 일때,
    App의 setState로 fetchedLanguages: []으로 설정
  0이 아닐때,
    fetchLanguage로 받아온 값을 language로 설정하고,
    App의 setState로 fetchedLanguages: language 로 설정


------------------------------------------------------------------------- 3. 키보드로 추천 검색어의 커서 옮기기
Suggestion의 state가 단순 받아온 인자 initialState를 설정했다면,
키보드로 커서를 옮기기 위해
state에 selectedIndex : 0을 넣고,
initialState는 items: initialState.items로 바꾼다.

당연히,
setState에서도 단순히 nextState를 state로 설정하는 것이 아닌,
기존의 state를 펼치고, 전달받은 nextState를 넣어서 설정한다.

App.js에서
Suggestion의 setState가 바뀐 것처럼,
this.setState에 있는 suggestion.setState에
selectedIndex:0을 추가한다.

suggestion을 선언한 곳에서도,
initialState에 cursor:0 을 추가한다.

--------------------------------------- 3-1. selectedIndex를 이용해 강조 처리하기
Suggestion의 render함수에서
state에서 items와 selectedIndex를 함께 선언.

items를 map으로 li태그를 만드는 곳에서 className 추가하기.

--------------------------------------- 3-2. 화살표 위,아래로 selectedIndex 변경하기.
Suggestion에 onSelect 인자 추가로 받고,

 window.이벤트리스너 넣기.

--------------------------------------- 🐛 버그 1. 커서 초기화
SearchInput에서 이벤트 리스너의 콜백함수에 조건 걸어주는 것으로 해결.

--------------------------------------- 3-3. 엔터키 눌러서 선택처리 하기
Suggestion의 3번째 인자 onSelect를 추가.

Suggestion을 import 하는 App.js에도 onSelect 추가.

--------------------------------------- 🐛 버그 2. 새로고침
SearchInput에 submit을 기다리는 이벤트리스너 추가하고,
preventDefault()로 해결

--------------------------------------- 3-4. 마우스 클릭으로 선택처리 하기
Suggestion 컴포넌트에
각 element에 이벤트 리스너 붙이기.
각 element에 붙어있던 index 값 받아와서 onSelect에 넣어주기.

------------------------------------------------------------------------- 4. App의 state에 선택한 언어 추가하기
--------------------------------------- 4-1. SelectedLanguages 구현하기
JS로 구현할 계획이기 때문에,
html에 있던 div 태그에 class 이름이 selectedLanguages였던거 지운 후

- 초기화
1. document.createElement('div')으로 elemet를 생성하고
2. className 붙여주고.
  만든 element를 target의 자식 노드로 붙인다.
3. 받아온 initialState를 state에 넣어주는걸로 초기화한다.
4. setState도 만들어준다.
  nextState가 생기면 state는 nextState로 바꿔주고,
  렌더링.
5. 렌더링 함수 정의해주기.
6. 렌더링.

초기화한대로 App.js에서 선언하기.
1. import하고
2. 필요한 인자 target과 initialState:[]를 인자를 전달하면서 선언.
3. this.의 setState에 selectedLanguages의 setState 추가히기.

--------------------------------------- 4-2. 5개까지만 선택하기
SelectedLanguages의 setState할 때,
state 길이가 5개 넘으면 slice로 잘라주기.




state의 중요성... 모든 값이 state로 바뀐다!!!!



에러
// 1. Access to script at 'file:///C:/경로/js/module.js' from origin 'null' has been blocked by CORS 
// policy: Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https.

Ref: https://velog.io/@takeknowledge/%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%9C-CORS-policy-%EA%B4%80%EB%A0%A8-%EC%97%90%EB%9F%AC%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0-3gk4gyhreu

2. HTML에서 JS 불러올 때 script 태그에 타입을 모듈로 하면 뭐가 다르니?


// ----------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------

