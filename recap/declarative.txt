ref: https://iborymagic.tistory.com/73

명령형 프로그래밍은
  무엇을 '어떻게' 할 것인가?
선언형 프로그래밍은
  '무엇'을 할 것인가?


선언형 방식이 제대로 동작하기 위해선,
명령형에서 표현된 '어떻게'의 부분이 추상화되어 있어야 한다.

선언형 프로그램 중 하나인 HTML은
어떤 일을 어떻게 수행하는가 보다 무엇을 수행하는가에 관심이 있다.

명령형의 특징은
어떤 일을 '어떻게' 처리하는지에 관해 묘사한다.
state의 일부를 변경한다.
가독성이 떨어진다.


선언형의 특징은
'무엇'이 일어나는지에 관해서만 묘사한다.
state를 '변경'해선 안된다.
가독성이 좋다.
최종적인 목표가 무엇인지에만 관심이 있다.
세부적인 단계들에는 관심이 없다는 뜻.

효율적인 선언형 프로그래밍 방법은,
명령적으로 작성된 코드를 추상화 하는 것.

선언형의 이점은 프로그램 상황에 독립적일 수 있다.
명령형 코드는 현재의 맥락에 의존하기 때문에 재사용하기 어렵다.
선언형 코드는 해당 코드가 달성하고자 하는 것이 무엇인지만을 나열하기 때문에
동일한 코드를 다른 프로그램에서 재사용하기 쉽다.




선언적 프로그래밍은 "기계의 동작을 모델로 하는 것이 아닌, 개발자의 두뇌(정신, 생각)를 모델로 본딴 언어를 가지고 프로그래밍 하는 것" 이다.

명령형 프로그래밍은 문제를 어떻게 해결해야하는지 컴퓨터에게 명시적으로 명령을 내리는 방법을 의미하고,
선언형 프로그래밍은 무엇을 해결할 것인지에 보다 집중하여 어떻게 문제를 해결하는지에 대해서는 컴퓨터에게 위임하는 방법

함수형 프로그래밍은 문제를 해결하는 방법에 더 집중하고
사소한 작업은 컴퓨터에게 넘겨버리는 선언형 프로그래밍의 일종

함수형과 선언형의 차이??
